import 'dotenv/config';
import { Bot, session } from 'grammy';
import { aboutCommandHandler } from './handlers/about-handler';
import { startCommandHandler } from './handlers/start-handler';
import { aiChatHandler } from './handlers/ai-chat-handler';
import { containsBadWords } from './service/bad-word-check';

const bot = new Bot(process.env.BOT_TOKEN || '');

const warningMessages = [
  '–û–π-–æ–π! –ü–æ—Ö–æ–∂–µ, –≤–∞—à —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å –Ω–µ–º–Ω–æ–≥–æ –≤—ã—à–µ–ª –∑–∞ —Ä–∞–º–∫–∏ –ø—Ä–∏–ª–∏—á–∏–π! üòÑ',
  '–°—Ç–æ–ø! –í–∞—à–∏ —Å–ª–æ–≤–∞ —Ç—Ä–µ–±—É—é—Ç —Ü–µ–Ω–∑—É—Ä—ã! –î–∞–≤–∞–π—Ç–µ –æ—Å—Ç–∞–≤–∏–º –∏—Ö –¥–ª—è –≤–µ—á–µ—Ä–∏–Ω–∫–∏! üéâ',
  '–£–ø—Å! –ö–∞–∂–µ—Ç—Å—è, –≤–∞—à–∏ —Å–ª–æ–≤–∞ —Ä–µ—à–∏–ª–∏ –Ω–µ–º–Ω–æ–≥–æ –ø–æ—Ñ–ª–∏—Ä—Ç–æ–≤–∞—Ç—å —Å —Ü–µ–Ω–∑—É—Ä–æ–π! üòâ',
  '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –í–∞—à–∏ —Å–ª–æ–≤–∞ —Å–ª–∏—à–∫–æ–º –≥–æ—Ä—è—á–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞! üî•',
  '–≠–π, –≤—ã! –í–∞—à–∏ —Å–ª–æ–≤–∞ –ø—ã—Ç–∞—é—Ç—Å—è —Å–±–µ–∂–∞—Ç—å –∏–∑ –ø—Ä–∏–ª–∏—á–Ω–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞! üòú',
];

export enum State {
  MAIN = '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
  START = '–°—Ç–∞—Ä—Ç',
  ABOUT = '–û–±–æ –º–Ω–µ',
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
bot.use(
  //@ts-expect-error (remove it)
  session({
    initial: () => ({
      state: State.START,
    }),
  })
);

const COMMANDS = {
  start: startCommandHandler,
  about: aboutCommandHandler,
};

bot.command('start', COMMANDS.start);
bot.command('about', COMMANDS.about);

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
const userWarnings = new Map<number, number>();

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const blockedUsers = new Map<number, number>();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 1 —á–∞—Å
function blockUser(userId: number) {
  const blockDuration = 60 * 60 * 1000; // 1 —á–∞—Å –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
  blockedUsers.set(userId, Date.now() + blockDuration);

  // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ 1 —á–∞—Å
  setTimeout(() => {
    blockedUsers.delete(userId);
    userWarnings.delete(userId); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ—Å–ª–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  }, blockDuration);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ
bot.on('message', async ctx => {
  const userId = ctx.from.id;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  if (blockedUsers.has(userId)) {
    const unblockTime = blockedUsers.get(userId);
    if (unblockTime && Date.now() < unblockTime) {
      await ctx.reply('–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ 1 —á–∞—Å –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏.');
      return;
    }
  }

  const commentText = ctx.message.text;

  if (!commentText) {
    console.log('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞.');
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤
  if (containsBadWords(commentText)) {
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const warnings = (userWarnings.get(userId) || 0) + 1;
    userWarnings.set(userId, warnings);

    // –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
    const randomMessage =
      `${warningMessages[Math.floor(Math.random() * warningMessages.length)]}\n\n` +
      `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${warnings}/10.`;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    await ctx.reply(randomMessage);
    await ctx.deleteMessage();

    // –ï—Å–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π 10, –±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (warnings >= 10) {
      blockUser(userId);
      await ctx.reply('–í—ã –ø–æ–ª—É—á–∏–ª–∏ 10 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ 1 —á–∞—Å.');
      return;
    }

    return; // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
  }

  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –Ω–∞ /generate
    const answer = await aiChatHandler(commentText);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    await ctx.reply(answer, {
      reply_to_message_id: ctx.message.message_id, // –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.', {
      reply_to_message_id: ctx.message.message_id,
    });
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.start();
